@* This is the old index code that I'm leaving here to show the TempData example

<h2>Index</h2>
<div>This really is our view!</div>

<!--Uses and displays the TempData message from the TempDataDemo() method as long as it's not set to null-->
@if (TempData["SuccessMessage"] != null)
{
    <div class="success-message">@TempData["SuccessMessage"]</div>
}

*@


<!--This index view was created using a strongly-typed view using the Auction model and List Scaffold template-->
@model IEnumerable<MvcAuction.Models.Auction>

@{
    //This shows how to call the layout file 
    Layout = "~/Views/Shared/_LayoutWithSidebar.cshtml";
    ViewBag.Title = "Auctions";
}

<!--Uses the @@section sidebar from "_LayoutWithSidebar" to render content-->
@section sidebar{
    <h3 style="text-decoration:underline">Categories</h3>
    @Html.Action("SidebarCategories", "Auctions")
}

<!--Uses @@section to render content in the featuered section of the layout -->
@section Featured{
    <section class="featured">
        <div class="content-wrapper">
            This is some featured content!
        </div>
    </section>
}

<!--Uses @@section to render content in the Scripts section of the layout-->
@section Scripts{
    <!--This content will be rendered in the Scripts section-->
}

<h2>@ViewBag.Title</h2>

<!--This code is automatically generated by using the List Scaffold template
It creates a table for displaying object data with links to create, edit, and delete
This will be commented out to instead show how to use the partial view "_AuctionTile to display this data-->
@*
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImageUrl)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EndTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CurrentPrice)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ImageUrl)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EndTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CurrentPrice)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
*@

<!--Displays the partial view "_AuctionTile" for each item in Model-->
<!--Because our partial view only expects one object, we need to specify an object to use "item" in the parameters-->
@foreach (var item in Model)
{
    @Html.Partial("_AuctionTile", item)
}